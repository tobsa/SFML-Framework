////////////////////////////////////////////////////////////////////////////////
// Filename: MusicList.hpp
// Author:   Tobias Savinainen
// Year:     2013
////////////////////////////////////////////////////////////////////////////////
#ifndef MUSIC_LIST_HPP
#define MUSIC_LIST_HPP

////////////////////////////////////////////////////////////////////////////////
// Header files
////////////////////////////////////////////////////////////////////////////////
#include <SFML/Audio/Music.hpp>
#include "../Containers/Vector.hpp"
#include <map>
#include <memory>

namespace sfx
{

////////////////////////////////////////////////////////////////////////////////
// A list of music that can be played in order or randomly
////////////////////////////////////////////////////////////////////////////////
class MusicList 
{
private:

    ////////////////////////////////////////////////////////////////////////////////
    // Private typedefs
    ////////////////////////////////////////////////////////////////////////////////
    typedef std::shared_ptr<sf::Music> MusicPtr;
    typedef sfx::Vector<MusicPtr>      Musics;

public:

    ////////////////////////////////////////////////////////////////////////////////
    // Public enums
    ////////////////////////////////////////////////////////////////////////////////
    enum Order { Linear, Random };

    ////////////////////////////////////////////////////////////////////////////////
    // Create a music list
    ////////////////////////////////////////////////////////////////////////////////
    MusicList(Order order = Linear);

    ////////////////////////////////////////////////////////////////////////////////
    // Add music to the list
    ////////////////////////////////////////////////////////////////////////////////
    void addMusic(const std::string& filename);

    ////////////////////////////////////////////////////////////////////////////////
    // Play, pause or stop the music list
    ////////////////////////////////////////////////////////////////////////////////
    void play();
    void pause();
    void stop();

    ////////////////////////////////////////////////////////////////////////////////
    // Update the music list
    ////////////////////////////////////////////////////////////////////////////////
    void onUpdate();

    ////////////////////////////////////////////////////////////////////////////////
    // Set new order
    ////////////////////////////////////////////////////////////////////////////////
    void setOrder(Order order);

private:

    ////////////////////////////////////////////////////////////////////////////////
    // Private member data
    ////////////////////////////////////////////////////////////////////////////////
    Musics      m_musics;
    Order       m_order;
    std::size_t m_index;
    bool        m_playing;
};

} // namespace sfx

#endif