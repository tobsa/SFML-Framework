////////////////////////////////////////////////////////////////////////////////
// Filename: Timer.cpp
// Author:   Tobias Savinainen
// Year:     2013
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Header files
////////////////////////////////////////////////////////////////////////////////
#include "Timer.hpp"

namespace sfx
{

////////////////////////////////////////////////////////////////////////////////
Timer::Timer(bool paused) :
    m_paused (paused),
    m_time   (sf::Time::Zero)
{
}

////////////////////////////////////////////////////////////////////////////////
sf::Time Timer::getElapsedTime() const
{
    if(m_paused)
        return m_time;
    
    return m_time + m_clock.getElapsedTime();
}

////////////////////////////////////////////////////////////////////////////////
sf::Time Timer::restart(bool paused)
{
    sf::Time time = getElapsedTime();

    m_paused = paused;
    m_time   = sf::Time::Zero;
    m_clock.restart();

    return time;
}

////////////////////////////////////////////////////////////////////////////////
void Timer::pause()
{
    if(!m_paused)
        m_time += m_clock.getElapsedTime();

    m_paused = true;
}

////////////////////////////////////////////////////////////////////////////////
void Timer::resume()
{
    if(m_paused)
        m_clock.restart();

    m_paused = false;
}

////////////////////////////////////////////////////////////////////////////////
void Timer::toggle()
{
    if(m_paused)
        resume();
    else 
        pause();
}

////////////////////////////////////////////////////////////////////////////////
bool Timer::isPaused() const
{
    return m_paused;
}

} // namespace sfx