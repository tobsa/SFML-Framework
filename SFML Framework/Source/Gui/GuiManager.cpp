////////////////////////////////////////////////////////////////////////////////
// Filename: GuiManager.cpp
// Author:   Tobias Savinainen
// Year:     2013
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Header files
////////////////////////////////////////////////////////////////////////////////
#include "GuiManager.hpp"
#include <SFML/Graphics/RenderTarget.hpp>

namespace sfx
{

////////////////////////////////////////////////////////////////////////////////
GuiManager::GuiManager(ResourceManager& rm) :
    m_resourceManager (rm)
{
}
    
////////////////////////////////////////////////////////////////////////////////
ResourceManager& GuiManager::getResourceManager() const
{
    return m_resourceManager;
}

////////////////////////////////////////////////////////////////////////////////
void GuiManager::remove(const std::string& key)
{
    m_objects.erase(key);
}

////////////////////////////////////////////////////////////////////////////////
void GuiManager::onEvent(const sf::Event& event)
{
    for(const auto& object : m_objects)
        object.second->onEvent(event);
}

////////////////////////////////////////////////////////////////////////////////
void GuiManager::onUpdate()
{
    for(const auto& object : m_objects)
        object.second->onUpdate();
}

////////////////////////////////////////////////////////////////////////////////
void GuiManager::draw(sf::RenderTarget& target, sf::RenderStates states) const
{
    for(const auto& object : m_objects)
        target.draw(*object.second);
}

} // namespace sfx

