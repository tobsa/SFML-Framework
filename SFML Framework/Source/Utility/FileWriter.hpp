////////////////////////////////////////////////////////////////////////////////
// Filename: FileWriter.hpp
// Author:   Tobias Savinainen
// Year:     2013
////////////////////////////////////////////////////////////////////////////////
#ifndef SFX_FILE_WRITER_HPP
#define SFX_FILE_WRITER_HPP

////////////////////////////////////////////////////////////////////////////////
// Header files
////////////////////////////////////////////////////////////////////////////////
#include <fstream>
#include <string>

namespace sfx
{

////////////////////////////////////////////////////////////////////////////////
// A simple file writer class that simplyfies the task of writing to files
////////////////////////////////////////////////////////////////////////////////
class FileWriter
{
public:

    ////////////////////////////////////////////////////////////////////////////////
    // Types of opening modes
    ////////////////////////////////////////////////////////////////////////////////
    enum Mode { Clear, Save };

    ////////////////////////////////////////////////////////////////////////////////
    // Create a file writer object
    ////////////////////////////////////////////////////////////////////////////////
    FileWriter(const std::string& filename, Mode mode = Clear);

    ////////////////////////////////////////////////////////////////////////////////
    // Open a file
    ////////////////////////////////////////////////////////////////////////////////
    void open(const std::string& filename, Mode mode = Clear);

    ////////////////////////////////////////////////////////////////////////////////
    // Close the current file
    ////////////////////////////////////////////////////////////////////////////////
    void close();

    ////////////////////////////////////////////////////////////////////////////////
    // Check if the file writer is ready for writing
    ////////////////////////////////////////////////////////////////////////////////
    bool isOpen() const;

    ////////////////////////////////////////////////////////////////////////////////
    // Write to the file...
    ////////////////////////////////////////////////////////////////////////////////
    std::ostream& write();

    ////////////////////////////////////////////////////////////////////////////////
    // Writes uncommitted changes to the underlying output sequence
    ////////////////////////////////////////////////////////////////////////////////
    void flush();

private:

    ////////////////////////////////////////////////////////////////////////////////
    // Private member data
    ////////////////////////////////////////////////////////////////////////////////
    std::ofstream m_file;
};

} // namespace sfx

#endif