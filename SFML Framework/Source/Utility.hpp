////////////////////////////////////////////////////////////////////////////////
// Filename: Utility.hpp
// Author:   Tobias Savinainen
// Year:     2013
////////////////////////////////////////////////////////////////////////////////
#ifndef UTILITY_HPP
#define UTILITY_HPP

////////////////////////////////////////////////////////////////////////////////
// Header files
////////////////////////////////////////////////////////////////////////////////
#include <SFML/System/Vector2.hpp>
#include <SFML/Window/Event.hpp>
#include <string>

namespace sfx
{
    ////////////////////////////////////////////////////////////////////////////////
    // Definitions
    ////////////////////////////////////////////////////////////////////////////////
    const float Pi = 3.14159265359f;
    const float PiOver180 = Pi / 180.f;

    ////////////////////////////////////////////////////////////////////////////////
    // Convert between radians and degrees
    ////////////////////////////////////////////////////////////////////////////////
    float toDegree(float radians);
    float toRadian(float degrees);

    ////////////////////////////////////////////////////////////////////////////////
    // Get the distance between two points
    ////////////////////////////////////////////////////////////////////////////////
    float getDistance(const sf::Vector2f& position0, const sf::Vector2f& position1);
    float getDistance(float x0, float y0, float x1, float y1);

    ////////////////////////////////////////////////////////////////////////////////
    // Get the angle between two points
    ////////////////////////////////////////////////////////////////////////////////
    float getAngle(const sf::Vector2f& position0, const sf::Vector2f& position1);
    float getAngle(float x0, float y0, float x1, float y1);

    ////////////////////////////////////////////////////////////////////////////////
    // Get a random number
    ////////////////////////////////////////////////////////////////////////////////
    int getRandom(int begin, int end);
    float getRandom(float begin, float end);
    sf::Vector2f getRandom(float begin0, float end0, float begin1, float end1);

    ////////////////////////////////////////////////////////////////////////////////
    // Convert between strings and numbers
    ////////////////////////////////////////////////////////////////////////////////
    template<class T> T convert(const std::string& str);
    template<class T> std::string convert(T number);

    ////////////////////////////////////////////////////////////////////////////////
    // Clamp a value
    ////////////////////////////////////////////////////////////////////////////////
    template<class T> T clamp(T value, T min, T max);

    ////////////////////////////////////////////////////////////////////////////////
    // Get the mouse position (must be used with sf::Event::MouseMoved event
    ////////////////////////////////////////////////////////////////////////////////
    sf::Vector2f getMousePosition(const sf::Event& event);

    ////////////////////////////////////////////////////////////////////////////////
    // Check if a point is inside a circle
    ////////////////////////////////////////////////////////////////////////////////
    bool inCircle(const sf::Vector2f& position, const sf::Vector2f& center, float radius);
    bool inCircle(float x, float y, float centerX, float centerY, float radius);

    ////////////////////////////////////////////////////////////////////////////////
    // Encrypt/Decrypt a message with a key
    ////////////////////////////////////////////////////////////////////////////////
    std::string encrypt(const std::string& key, const std::string& message);
    std::string decrypt(const std::string& key, const std::string& message);

} // namespace sfx

////////////////////////////////////////////////////////////////////////////////
// Inline files
////////////////////////////////////////////////////////////////////////////////
#include "Utility.inl"

#endif